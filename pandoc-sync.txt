-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package pandoc-sync
@version 0.1.0.0

module Text.Pandoc.Sync.Format
data MarkdownType
MDPandoc :: MarkdownType
MDStrict :: MarkdownType
MDPHP :: MarkdownType
MDGithub :: MarkdownType
MDMulti :: MarkdownType
MDCommon :: MarkdownType
data SlideShowType
SSS5 :: SlideShowType
SSSlidy :: SlideShowType
SSSlideous :: SlideShowType
SSDZSlides :: SlideShowType
SSRevealJS :: SlideShowType
SSBeamer :: SlideShowType
class AsSlideShowType r_a17lf
_SlideShowType :: AsSlideShowType r_a17lf => Prism' r_a17lf SlideShowType
_SSS5 :: AsSlideShowType r_a17lf => Prism' r_a17lf ()
_SSSlidy :: AsSlideShowType r_a17lf => Prism' r_a17lf ()
_SSSlideous :: AsSlideShowType r_a17lf => Prism' r_a17lf ()
_SSDZSlides :: AsSlideShowType r_a17lf => Prism' r_a17lf ()
_SSRevealJS :: AsSlideShowType r_a17lf => Prism' r_a17lf ()
_SSBeamer :: AsSlideShowType r_a17lf => Prism' r_a17lf ()
data PDFType
PTLaTeX :: PDFType
PTBeamer :: PDFType
PTConTeXt :: PDFType
PTHTML5 :: PDFType
data Format :: Bool -> Bool -> Type
[FNative] :: Format  'True  'True
[FJSON] :: Format  'True  'True
[FMarkdown] :: MarkdownType -> Bool -> Format  'True  'True
[FRST] :: Format  'True  'True
[FMediaWiki] :: Format  'True  'True
[FDocBook] :: Bool -> Format  'True  'True
[FOPML] :: Format  'True  'True
[FOrg] :: Format  'True  'True
[FTextile] :: Format  'True  'True
[FHTML] :: Bool -> Format  'True  'True
[FLaTeX] :: Format  'True  'True
[FHaddock] :: Format  'True  'True
[FTWiki] :: Format  'True  'False
[FDocX] :: Format  'True  'True
[FODT] :: Format  'True  'True
[FT2T] :: Format  'True  'False
[FEPub] :: EPUBVersion -> Format  'True  'True
[FFictionBook2] :: Format  'False  'True
[FICML] :: Format  'False  'True
[FSlideShow] :: SlideShowType -> Format  'False  'True
[FOpenDocument] :: Format  'False  'True
[FConTeXt] :: Format  'False  'True
[FTexinfo] :: Format  'False  'True
[FMan] :: Format  'False  'True
[FPlain] :: Format  'False  'True
[FDokuWiki] :: Format  'False  'True
[FZimWiki] :: Format  'False  'True
[FASCIIDoc] :: Format  'False  'True
[FTEI] :: Format  'False  'True
[FPDF] :: PDFType -> Format  'False  'True
[FRTF] :: Format  'False  'True
[FMkWriteOnly] :: Format  'True  'True -> Format  'False  'True
[FMkReadOnly] :: Format  'True  'True -> Format  'True  'False
class AsFormat ft
_FHTML :: AsFormat ft => Prism' (ft  'True  'True) Bool
_FSlideShow :: AsFormat ft => Prism' (ft  'False  'True) SlideShowType
_FPDF :: AsFormat ft => Prism' (ft  'False  'True) PDFType
_FODT :: AsFormat ft => Prism' (ft  'True  'True) ()
_FDocX :: AsFormat ft => Prism' (ft  'True  'True) ()
data SomeFormat :: Type
[SomeFormat] :: Sing r -> Sing w -> Format r w -> SomeFormat
someFormat :: (SingI r, SingI w) => Format r w -> SomeFormat
asReader :: forall r' r w. SingI r' => Sing r -> Traversal' (Format r' w) (Format r w)
writeOnly :: forall r. SingI r => Format r  'True -> Format  'False  'True
data Writer :: (Bool -> Bool -> Type) -> Type
[Writer] :: SingI r => f r  'True -> Writer f
data ReaderOptions
RO :: Bool -> ReaderOptions
[_roSmart] :: ReaderOptions -> Bool
fromReaderOptions :: ReaderOptions -> ReaderOptions
data HighlightStyle
HSPygments :: HighlightStyle
HSTango :: HighlightStyle
HSEspresso :: HighlightStyle
HSZenburn :: HighlightStyle
HSKate :: HighlightStyle
HSMonochrome :: HighlightStyle
HSHaddock :: HighlightStyle
toStyle :: HighlightStyle -> Style
data WriterOptions
WO :: Bool -> Maybe FilePath -> Maybe FilePath -> HTMLMathMethod -> Map String String -> Int -> Bool -> Maybe FilePath -> Maybe FilePath -> Bool -> HighlightStyle -> Int -> WriterOptions
[_woStandalone] :: WriterOptions -> Bool
[_woTemplatePath] :: WriterOptions -> Maybe FilePath
[_woDataDir] :: WriterOptions -> Maybe FilePath
[_woMathMethod] :: WriterOptions -> HTMLMathMethod
[_woVariables] :: WriterOptions -> Map String String
[_woTabStop] :: WriterOptions -> Int
[_woTOC] :: WriterOptions -> Bool
[_woReferenceODT] :: WriterOptions -> Maybe FilePath
[_woReferenceDocX] :: WriterOptions -> Maybe FilePath
[_woHighlight] :: WriterOptions -> Bool
[_woHighlightStyle] :: WriterOptions -> HighlightStyle
[_woColumns] :: WriterOptions -> Int
class HasWriterOptions c_a1bwa
writerOptions :: HasWriterOptions c_a1bwa => Lens' c_a1bwa WriterOptions
woColumns :: HasWriterOptions c_a1bwa => Lens' c_a1bwa Int
woDataDir :: HasWriterOptions c_a1bwa => Lens' c_a1bwa (Maybe FilePath)
woHighlight :: HasWriterOptions c_a1bwa => Lens' c_a1bwa Bool
woHighlightStyle :: HasWriterOptions c_a1bwa => Lens' c_a1bwa HighlightStyle
woMathMethod :: HasWriterOptions c_a1bwa => Lens' c_a1bwa HTMLMathMethod
woReferenceDocX :: HasWriterOptions c_a1bwa => Lens' c_a1bwa (Maybe FilePath)
woReferenceODT :: HasWriterOptions c_a1bwa => Lens' c_a1bwa (Maybe FilePath)
woStandalone :: HasWriterOptions c_a1bwa => Lens' c_a1bwa Bool
woTOC :: HasWriterOptions c_a1bwa => Lens' c_a1bwa Bool
woTabStop :: HasWriterOptions c_a1bwa => Lens' c_a1bwa Int
woTemplatePath :: HasWriterOptions c_a1bwa => Lens' c_a1bwa (Maybe FilePath)
woVariables :: HasWriterOptions c_a1bwa => Lens' c_a1bwa (Map String String)
formatReader :: PandocMonad m => Format  'True w -> Reader m
formatWriter :: PandocMonad m => Format r  'True -> Writer m
data FormatOptions :: Bool -> Bool -> Type
[FormatOptions] :: {_foFormat :: Format r w, _foReaderOpts :: HasIf r ReaderOptions, _foWriterOpts :: HasIf w WriterOptions} -> FormatOptions r w
foFormat :: forall a_a1bEq b_a1bEr. Lens' (FormatOptions a_a1bEq b_a1bEr) (Format a_a1bEq b_a1bEr)
pdfFormat :: PDFType -> Writer Format
foWriterOpts :: forall a_a1bEq b_a1bEr. Lens' (FormatOptions a_a1bEq b_a1bEr) (HasIf b_a1bEr WriterOptions)
foReaderOpts :: forall a_a1bEq b_a1bEr. Lens' (FormatOptions a_a1bEq b_a1bEr) (HasIf a_a1bEq ReaderOptions)
readerString :: Format  'True w -> String
writerString :: Format r  'True -> String
data HasIf :: Bool -> Type -> Type
[Has] :: a -> HasIf  'True a
[Hasn't] :: HasIf  'False a
_Has :: Iso' (HasIf  'True a) a
_Hasn't :: Iso' (HasIf  'False a) ()
hasIfMaybe :: HasIf b a -> Maybe a
allFormats :: [SomeFormat]
allWriters :: [Writer Format]
inferWriter :: String -> Writer Format
inferFormat :: String -> SomeFormat
instance (Data.Singletons.SingI r, Data.Singletons.SingI w) => Data.Binary.Class.Binary (Text.Pandoc.Sync.Format.FormatOptions r w)
instance (Data.Singletons.SingI r, Data.Singletons.SingI w) => Data.Hashable.Class.Hashable (Text.Pandoc.Sync.Format.FormatOptions r w)
instance Data.Binary.Class.Binary (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.FormatOptions)
instance Data.Hashable.Class.Hashable (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.FormatOptions)
instance Data.Aeson.Types.FromJSON.FromJSON (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.FormatOptions)
instance Data.Aeson.Types.ToJSON.ToJSON (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.FormatOptions)
instance GHC.Show.Show (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.FormatOptions)
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.Format.SomeFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Text.Pandoc.Sync.Format.SomeFormat
instance Data.Aeson.Types.ToJSON.ToJSON (Text.Pandoc.Sync.Format.Format r w)
instance Data.Aeson.Types.FromJSON.FromJSON (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.Format)
instance GHC.Generics.Generic (Text.Pandoc.Sync.Format.FormatOptions a b)
instance GHC.Show.Show (Text.Pandoc.Sync.Format.FormatOptions a b)
instance Text.Pandoc.Sync.Format.HasWriterOptions Text.Pandoc.Sync.Format.WriterOptions
instance Data.Hashable.Class.Hashable Text.Pandoc.Sync.Format.WriterOptions
instance Data.Aeson.Types.ToJSON.ToJSON Text.Pandoc.Sync.Format.WriterOptions
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.ReaderOptions
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.WriterOptions
instance Data.Default.Class.Default Text.Pandoc.Sync.Format.ReaderOptions
instance Data.Default.Class.Default Text.Pandoc.Sync.Format.WriterOptions
instance Data.Hashable.Class.Hashable Text.Pandoc.Sync.Format.ReaderOptions
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.Format.ReaderOptions
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.Format.WriterOptions
instance Data.Aeson.Types.ToJSON.ToJSON Text.Pandoc.Sync.Format.ReaderOptions
instance GHC.Generics.Generic Text.Pandoc.Sync.Format.WriterOptions
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.WriterOptions
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.WriterOptions
instance GHC.Show.Show Text.Pandoc.Sync.Format.WriterOptions
instance GHC.Generics.Generic Text.Pandoc.Sync.Format.HighlightStyle
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.HighlightStyle
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.HighlightStyle
instance GHC.Show.Show Text.Pandoc.Sync.Format.HighlightStyle
instance GHC.Classes.Ord Text.Pandoc.Options.HTMLMathMethod
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.HighlightStyle
instance Data.Hashable.Class.Hashable Text.Pandoc.Sync.Format.HighlightStyle
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.Format.HighlightStyle
instance Data.Aeson.Types.ToJSON.ToJSON Text.Pandoc.Sync.Format.HighlightStyle
instance Text.Pandoc.Sync.Format.HasReaderOptions Text.Pandoc.Sync.Format.ReaderOptions
instance Data.Binary.Class.Binary Text.Pandoc.Options.HTMLMathMethod
instance Data.Hashable.Class.Hashable Text.Pandoc.Options.HTMLMathMethod
instance GHC.Generics.Generic Text.Pandoc.Sync.Format.ReaderOptions
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.ReaderOptions
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.ReaderOptions
instance GHC.Show.Show Text.Pandoc.Sync.Format.ReaderOptions
instance GHC.Enum.Bounded Text.Pandoc.Sync.Format.PDFType
instance GHC.Enum.Enum Text.Pandoc.Sync.Format.PDFType
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.PDFType
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.PDFType
instance GHC.Generics.Generic Text.Pandoc.Sync.Format.PDFType
instance GHC.Show.Show Text.Pandoc.Sync.Format.PDFType
instance GHC.Classes.Ord Text.Pandoc.Options.EPUBVersion
instance GHC.Show.Show (Text.Pandoc.Sync.Format.Format r w)
instance GHC.Classes.Eq (Text.Pandoc.Sync.Format.Format r w)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Text.Pandoc.Sync.Format.HasIf b a)
instance GHC.Show.Show a => GHC.Show.Show (Text.Pandoc.Sync.Format.HasIf b a)
instance (Data.Singletons.SingI b, Data.Binary.Class.Binary a) => Data.Binary.Class.Binary (Text.Pandoc.Sync.Format.HasIf b a)
instance (Data.Singletons.SingI b, Data.Default.Class.Default a) => Data.Default.Class.Default (Text.Pandoc.Sync.Format.HasIf b a)
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Text.Pandoc.Sync.Format.HasIf b a)
instance (Data.Singletons.SingI b, Data.Aeson.Types.FromJSON.FromJSON a) => Data.Aeson.Types.FromJSON.FromJSON (Text.Pandoc.Sync.Format.HasIf b a)
instance (Data.Singletons.SingI r, Data.Singletons.SingI w) => Data.Binary.Class.Binary (Text.Pandoc.Sync.Format.Format r w)
instance GHC.Show.Show Text.Pandoc.Sync.Format.SomeFormat
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.SomeFormat
instance Data.Hashable.Class.Hashable Text.Pandoc.Sync.Format.SomeFormat
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.SomeFormat
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.SomeFormat
instance GHC.Show.Show (Text.Pandoc.Sync.Format.Writer Text.Pandoc.Sync.Format.Format)
instance Text.Pandoc.Sync.Format.AsFormat Text.Pandoc.Sync.Format.Format
instance (Data.Singletons.SingI r, Data.Singletons.SingI w) => Data.Hashable.Class.Hashable (Text.Pandoc.Sync.Format.Format r w)
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.PDFType
instance Text.Pandoc.Sync.Format.AsSlideShowType Text.Pandoc.Sync.Format.SlideShowType
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.SlideShowType
instance Data.Binary.Class.Binary Text.Pandoc.Options.EPUBVersion
instance GHC.Enum.Bounded Text.Pandoc.Sync.Format.SlideShowType
instance GHC.Enum.Enum Text.Pandoc.Sync.Format.SlideShowType
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.SlideShowType
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.SlideShowType
instance GHC.Generics.Generic Text.Pandoc.Sync.Format.SlideShowType
instance GHC.Show.Show Text.Pandoc.Sync.Format.SlideShowType
instance GHC.Enum.Bounded Text.Pandoc.Sync.Format.MarkdownType
instance GHC.Enum.Enum Text.Pandoc.Sync.Format.MarkdownType
instance GHC.Classes.Ord Text.Pandoc.Sync.Format.MarkdownType
instance GHC.Classes.Eq Text.Pandoc.Sync.Format.MarkdownType
instance GHC.Generics.Generic Text.Pandoc.Sync.Format.MarkdownType
instance GHC.Show.Show Text.Pandoc.Sync.Format.MarkdownType
instance Data.Binary.Class.Binary Text.Pandoc.Sync.Format.MarkdownType

module Text.Pandoc.Sync
data Config
updateCanonical :: Map BranchSpec Branch -> Canonical -> AskFile Pandoc Canonical
syncBranch :: Canonical -> Branch -> Branch
updateBranch :: CanPath -> UTCTime -> Branch -> Branch
pushBranch :: BranchSpec -> Canonical -> Map FilePath Pandoc
pullBranch :: BranchSpec -> Set CanPath -> AskFile UTCTime Branch
instance GHC.Show.Show Text.Pandoc.Sync.Config
instance GHC.Show.Show Text.Pandoc.Sync.FileConfig
instance GHC.Show.Show Text.Pandoc.Sync.Opts
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.Config
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.FileConfig
instance Data.Semigroup.Semigroup Text.Pandoc.Sync.Opts
instance GHC.Base.Monoid Text.Pandoc.Sync.Opts
instance Data.Default.Class.Default Text.Pandoc.Sync.Opts
instance Data.Aeson.Types.FromJSON.FromJSON Text.Pandoc.Sync.Opts
instance GHC.Classes.Ord Text.Pandoc.Sync.CFile
instance GHC.Classes.Eq Text.Pandoc.Sync.CFile
instance GHC.Show.Show Text.Pandoc.Sync.CFile
instance GHC.Classes.Ord Text.Pandoc.Sync.BranchSpec
instance GHC.Classes.Eq Text.Pandoc.Sync.BranchSpec
instance GHC.Show.Show Text.Pandoc.Sync.BranchSpec
